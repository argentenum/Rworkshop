> months <- c("Jan","Feb","Mar")
> days <- c(31,28,31)
> monthLength <- data.frame(months, days, stringsAsFactors = FALSE)
> monthLength
  months days
1    Jan   31
2    Feb   28
3    Mar   31
> ?data.frame
> ?read.csv
> randVec <- c(1:10)
> randVec
 [1]  1  2  3  4  5  6  7  8  9 10
> randVec[which(randVec > 5)]
[1]  6  7  8  9 10
> which(randVec > 5)
[1]  6  7  8  9 10
> randVec[which((randVec %% 2)>0)]
[1] 1 3 5 7 9
> oddValues <- NULL
> oddValues
NULL
> oddValues <- NULL
> for (gt in 1:length(randVec))
+ {
+   if((randVec[gt] %% 2)>0,oddValues <- c(oddValues,randVec[gt]))
Error: unexpected ',' in:
"{
  if((randVec[gt] %% 2)>0,"
> }
Error: unexpected '}' in "}"
> for (gt in 1:length(randVec))
+ {
+   if((randVec[gt] %% 2)>0,oddValues <- c(oddValues,randVec[gt])
Error: unexpected ',' in:
"{
  if((randVec[gt] %% 2)>0,"
>      oddValues <- oddValues)
Error: unexpected ')' in "     oddValues <- oddValues)"
> }
Error: unexpected '}' in "}"
> gt
Error: object 'gt' not found
> for (gt in 1:length(randVec))
+ {
+   ifelse((randVec[gt] %% 2)>0,oddValues <- c(oddValues,randVec[gt])
+      oddValues <- oddValues)
Error: unexpected symbol in:
"  ifelse((randVec[gt] %% 2)>0,oddValues <- c(oddValues,randVec[gt])
     oddValues"
> }
Error: unexpected '}' in "}"
> ?for
+ 
> 
> randVec
 [1]  1  2  3  4  5  6  7  8  9 10
> randVec[1] %% 2
[1] 1
> (randVec[1] %% 2) > 0
[1] TRUE
> gt <- 1
>   ifelse((randVec[gt] %% 2)>0,oddValues <- c(oddValues,randVec[gt])
+      oddValues <- oddValues)
Error: unexpected symbol in:
"  ifelse((randVec[gt] %% 2)>0,oddValues <- c(oddValues,randVec[gt])
     oddValues"
> ?ifelse
> for (gt in 1:length(randVec))
+ {
+   ifelse((randVec[gt] %% 2)>0,oddValues <- c(oddValues,randVec[gt]),
+      oddValues <- oddValues)
+ }
> oddValues
[1] 1 3 5 7 9
> str(num)
 num [1:10] 100 2 34 5 6 7 3 4 99 67
> str(oddValues)
 int [1:5] 1 3 5 7 9
> pnp <- scan("C:/Users/DELL/Dropbox/Arjun/02-research/digital-humanities/workshops/Rworkshop/ClassworkFiles/pnp.txt","")
Read 70 items
> pnp
 [1] "It"             "is"             "a"              "truth"         
 [5] "universally"    "acknowledged,"  "that"           "a"             
 [9] "single"         "man"            "in"             "possession"    
[13] "of"             "a"              "good"           "fortune,"      
[17] "must"           "be"             "in"             "want"          
[21] "of"             "a"              "wife."          "However"       
[25] "little"         "known"          "the"            "feelings"      
[29] "or"             "views"          "of"             "such"          
[33] "a"              "man"            "may"            "be"            
[37] "on"             "his"            "first"          "entering"      
[41] "a"              "neighbourhood," "this"           "truth"         
[45] "is"             "so"             "well"           "fixed"         
[49] "in"             "the"            "minds"          "of"            
[53] "the"            "surrounding"    "families,"      "that"          
[57] "he"             "is"             "considered"     "the"           
[61] "rightful"       "property"       "of"             "some"          
[65] "one"            "or"             "other"          "of"            
[69] "their"          "daughters."    
> str(pnp)
 chr [1:70] "It" "is" "a" "truth" "universally" "acknowledged," ...
> wordLength <- data.frame(pnp, nchar(pnp), stringsAsFactors = FALSE)
> str(wordLength)
'data.frame':	70 obs. of  2 variables:
 $ pnp       : chr  "It" "is" "a" "truth" ...
 $ nchar.pnp.: int  2 2 1 5 11 13 4 1 6 3 ...
> head(wordLength)
            pnp nchar.pnp.
1            It          2
2            is          2
3             a          1
4         truth          5
5   universally         11
6 acknowledged,         13
> bigWords <- wordLength[which(wordLength$nchar.pnp.>5),]
> bigWords
              pnp nchar.pnp.
5     universally         11
6   acknowledged,         13
9          single          6
12     possession         10
16       fortune,          8
24        However          7
25         little          6
28       feelings          8
40       entering          8
42 neighbourhood,         14
54    surrounding         11
55      families,          9
59     considered         10
61       rightful          8
62       property          8
70     daughters.         10
> bigwords[42]
Error: object 'bigwords' not found
> bigWords[42]
Error in `[.data.frame`(bigWords, 42) : undefined columns selected
> bigWords$pnp[42]
[1] NA
> wordLength$pnp[42]
[1] "neighbourhood,"
> substr(wordLength$pnp[42],1,9)
[1] "neighbour"
> ?substr
> strsplit(wordLength$pnp[42], split = "r")
[[1]]
[1] "neighbou" "hood,"   

> strsplit("these are a few of my favourite things", split = " ")
[[1]]
[1] "these"     "are"       "a"         "few"       "of"       
[6] "my"        "favourite" "things"   

> unlist(strsplit("these are a few of my favourite things", split = " "))
[1] "these"     "are"       "a"         "few"       "of"       
[6] "my"        "favourite" "things"   
> whatsinaName <- unlist(strsplit("these are a few of my favourite things", split = " "))
> whatsinaName
[1] "these"     "are"       "a"         "few"       "of"       
[6] "my"        "favourite" "things"   
> setwd("C:/Users/DELL/Dropbox/Arjun/02-research/digital-humanities/workshops/Rworkshop/ClassworkFiles")
> tutLog <- read.csv("logTut8.csv", stringsAsFactors = FALSE)
> View(tutLog)
> head(tutLog)
            Time User.full.name Affected.user         Event.context Component            Event.name
1 3/03/22, 22:54     anonymous1            NA Quiz: Tutorial Quiz 8      Quiz  Course module viewed
2 3/03/22, 19:56     anonymous2            NA Quiz: Tutorial Quiz 8      Quiz Quiz attempt reviewed
3 3/03/22, 19:56     anonymous2            NA Quiz: Tutorial Quiz 8      Quiz  Course module viewed
4 3/03/22, 19:26     anonymous3            NA Quiz: Tutorial Quiz 8      Quiz Quiz attempt reviewed
5 3/03/22, 19:26     anonymous3            NA Quiz: Tutorial Quiz 8      Quiz  Course module viewed
6 3/03/22, 18:56     anonymous4            NA Quiz: Tutorial Quiz 8      Quiz  Course module viewed
                                                                                                                                       Description
1                                                                The user with id '2249' viewed the 'quiz' activity with course module id '82444'.
2 The user with id '38517' has had their attempt with id '380303' reviewed by the user with id '38517' for the quiz with course module id '82444'.
3                                                               The user with id '38517' viewed the 'quiz' activity with course module id '82444'.
4 The user with id '32887' has had their attempt with id '380265' reviewed by the user with id '32887' for the quiz with course module id '82444'.
5                                                               The user with id '32887' viewed the 'quiz' activity with course module id '82444'.
6                                                               The user with id '32180' viewed the 'quiz' activity with course module id '82444'.
  Origin      IP.address
1    web   10.190.19.111
2    web 202.173.125.148
3    web 202.173.125.148
4    web   10.184.32.125
5    web   10.184.32.125
6    web   223.188.68.76
> names(tutLog)
[1] "Time"           "User.full.name" "Affected.user"  "Event.context"  "Component"      "Event.name"    
[7] "Description"    "Origin"         "IP.address"    
> tutLog$Time[100]
[1] "3/03/22, 18:32"
> #we need only logs between start and end of the exam
> #since date of the exam is same for all events
> tutLog$Time <- substr(tutLog$Time,nchar(tutLog$Time)-4,nchar(tutLog$Time))
> tutLog$Time[100]
[1] "18:32"
> paste("one","two")
[1] "one two"
> paste("one","two", sep = "")
[1] "onetwo"
> #convert time to format hh:mm:ss for chron
> tutLog$Time <- paste(tutLog$Time,":00", sep = "")
> tutLog$Time[100]
[1] "18:32:00"
> str(tutLog$Time[100])
 chr "18:32:00"
> install.packages("chron")
Error in install.packages : Updating loaded packages
> ?chron
> tutLog$Time <- chron(times=tutLog$Time)
> str(tutLog$Time[100])
 'times' num 18:32:00
 - attr(*, "format")= chr "h:m:s"
> #defining start and end times of the exam
> startTime <-  chron(times="18:22:00")
> endTime <- chron(times="18:32:00")
> #subsetting rows within the time range
> examLog <- tutLog[which(tutLog$Time>=startTime & tutLog$Time <=endTime),]
> length(examLog$User.full.name)
[1] 1466
> #finding out unique Users and IP addresses
> uniqueUsers <- unique(examLog$User.full.name)
> uniqueIP <- unique(examLog$IP.address)
> length(uniqueUsers)
[1] 79
> length(uniqueIP)
[1] 85
> names(examLog)
[1] "Time"           "User.full.name" "Affected.user"  "Event.context"  "Component"      "Event.name"    
[7] "Description"    "Origin"         "IP.address"    
> #find out if two users logged in from same IP address
> #subset only the required columns
> checkLog <- examLog[,c(2,9)]
> head(checkLog)
   User.full.name    IP.address
42    anonymous21   10.55.16.10
43    anonymous22 45.118.158.78
44    anonymous23  10.184.24.58
45    anonymous22 45.118.158.78
46    anonymous21   10.55.16.10
47    anonymous23  10.184.24.58
> duplicated(checkLog)
   [1] FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE
  [17]  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE
  [33]  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE
  [49]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE
  [65]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE
  [81] FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [97]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [113] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [129]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE
 [145]  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [161] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [177]  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [193]  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [209]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [225]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [241]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [257]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
 [273] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [289]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [305]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE
 [321]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [337]  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [353]  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [369]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [385]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [401]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
 [417] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [433]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
 [449]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [465] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [481]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
 [497]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE
 [513]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE
 [529]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [545]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE
 [561]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE
 [577]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [593]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [609]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [625]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [641]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [657]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [673]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [689]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [705]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE
 [721]  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [737]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [753]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [769]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [785]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [801]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [817]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [833]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [849]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [865]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [881]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [897]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [913]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [929]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [945]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [961]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [977]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [993]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [ reached getOption("max.print") -- omitted 466 entries ]
> 2 != 3
[1] TRUE
> 3 != 3
[1] FALSE
> #deduplicate checkLog
> checkLog <- checkLog[!duplicated(checkLog),]
> setwd("C:/Users/DELL/Dropbox/Arjun/02-research/digital-humanities/workshops/Rworkshop/ClassworkFiles")
> tutLog <- read.csv("logTut8.csv", stringsAsFactors = FALSE)
> #we need only logs between start and end of the exam
> #since date of the exam is same for all events
> tutLog$Time <- substr(tutLog$Time,nchar(tutLog$Time)-4,nchar(tutLog$Time))
> #convert time to format hh:mm:ss for chron
> tutLog$Time <- paste(tutLog$Time,":00", sep = "")
> library(chron)
> tutLog$Time <- chron(times=tutLog$Time)
> #defining start and end times of the exam
> startTime <-  chron(times="18:22:00")
> endTime <- chron(times="18:32:00")
> #subsetting rows within the time range
> examLog <- tutLog[which(tutLog$Time>=startTime & tutLog$Time <=endTime),]
> #finding out unique Users and IP addresses
> uniqueUsers <- unique(examLog$User.full.name)
> uniqueIP <- unique(examLog$IP.address)
> #find out if two users logged in from same IP address
> #subset only the required columns
> checkLog <- examLog[,c(2,9)]
> #deduplicate checkLog
> checkLog <- checkLog[!duplicated(checkLog),]
> probIPs <- NULL
> probUsers <- NULL
> for (n in 1:length(uniqueIP))
+ {
+   #extract rows for current uniqueIP
+   scrutinyUsers <- NULL
+   scrutinyUsers <-  checkLog$User.full.name[which(checkLog$IP.address==uniqueIP[n])]
+   if (length(scrutinyUsers)>1)
+   {
+     probIPs <- c(probIPs,uniqueIP[n])
+     probUsers <- c(probUsers,scrutinyUsers)
+   }
+ }
> print(probUsers)
[1] "anonymous31" "anonymous44"
> probIPs
[1] "10.184.27.238"